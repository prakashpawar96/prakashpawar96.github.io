{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n<button (click)=\"showForm = true\">Add</button>\n\n<form *ngIf=\"showForm\" #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n  <label for=\"title\">Title:</label><br>\n  <input type=\"text\" id=\"title\" name=\"title\" [(ngModel)]=\"title\"><br>\n  <label for=\"body\">Body:</label><br>\n  <input type=\"text\" id=\"body\" name=\"body\" [(ngModel)]=\"body\"><br>\n  <button type=\"submit\">Submit</button>\n</form>\n\n<table>\n  <tr>\n    <th>ID</th>\n    <th>Title</th>\n    <th>Body</th>\n  </tr>\n  <tr ngif=\"getData=true\">\n    <td>{{ postData?.id }}</td>\n    <td>{{ postData?.title }}</td>\n    <td>{{ postData?.body }}</td>\n  </tr>\n  <tr *ngFor=\"let post of posts\">\n    <td>{{ post.id }}</td>\n    <td>{{ post.title }}</td>\n    <td>{{ post.body }}</td>\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title: string;\n  body: string;\n  posts: any[];\n  NgForm:any;\n  showForm:boolean=false;\n  postData: any;\n  getData:boolean=false;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n\n    this.http.get<any[]>('https://jsonplaceholder.typicode.com/posts')\n      .subscribe(posts => this.posts = posts);\n  }\n\n onSubmit(form: NgForm) {\n\n  console.log(form.value);\n  const post = {\n    title: this.title,\n    body: this.body\n  };\n\n  this.http.post('https://jsonplaceholder.typicode.com/posts', post).subscribe(response => {\n    this.postData=response;\n    this.getData=true;\n  });\n}\n  \n}","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\n// const routes: Routes = [\n//   {\n//    path:'post',\n//    loadChildren:()=>import('./post/post.module').then(m=>m.PostModule),\n//   }\n//  ];\n\nconst routes: Routes = [];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}